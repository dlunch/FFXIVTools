on:
  push:
    branches:
      - master
  workflow_dispatch:

name: Build server image

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

jobs:
  build_server:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        targets:
          - tag: 'amd64'
            platform: 'linux/amd64'
          #- tag: "armv7"
          #  platform: "linux/arm/v7"
          #- tag: "arm64"
          #  platform: "linux/arm64"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ matrix.targets.tag }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-${{ matrix.targets.tag }}-buildx-

      - name: Docker Login
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Docker Build
        run: |
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --cache-to "type=local,dest=/tmp/.buildx-cache,mode=max" \
            --platform ${{ matrix.targets.platform }} \
            --push \
            --tag ghcr.io/dlunch/ffxivtools:latest-server-${{ matrix.targets.tag }} \
            --file Dockerfile.server \
            .

      - name: Clear
        if: always()
        run: |
          rm -f ${HOME}/.docker/config.json
  merge_tags:
    needs: build_server
    runs-on: ubuntu-latest

    steps:
      - name: Docker Login
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
          docker buildx imagetools create -t \
            ghcr.io/dlunch/ffxivtools:latest-server \
            ghcr.io/dlunch/ffxivtools:latest-server-amd64
      - name: Clear
        if: always()
        run: |
          rm -f ${HOME}/.docker/config.json
